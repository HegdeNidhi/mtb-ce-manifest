<apps>
  <app>
    <name>Empty PSoC6 App</name>
    <id>mtb-example-psoc6-empty-app</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-empty-app</uri>
    <description>This empty application provides a template for creating applications using PSoC 6 devices.</description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Hello World</name>
    <id>mtb-example-psoc6-hello-world</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-hello-world</uri>
    <description>This code example demonstrates simple UART communication by printing a "Hello World" message on a terminal and blinks an LED using a Timer resource using PSoC 6 MCU.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CapSense Buttons and Slider</name>
    <id>mtb-example-psoc6-capsense-buttons-slider</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-capsense-buttons-slider</uri>
    <description>This code example features a 5-segment CapSense slider and two CapSense buttons. Button 0 turns the LED on, Button 1 turns the LED off and the slider controls the brightness of the LED. The code example also demonstrates interfacing with Tuner GUI using I2C interface.</description>
    <req_capabilities>psoc6 led capsense_button capsense_linear_slider</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>BLE Battery Level FreeRTOS</name>
    <id>mtb-example-psoc6-ble-battery-level-freertos</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-battery-level-freertos</uri>
    <description>This code example demonstrates the implementation of a BLE Battery Service using PSoC 6 MCU with Bluetooth Low Energy Connectivity (PSoC 6 BLE). This code example implements a GATT Server with the Battery Service and Device Information Service BLE standards. This code example uses FreeRTOS.</description>
    <req_capabilities>psoc6 led switch ble</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>GPIO Interrupt</name>
    <id>mtb-example-psoc6-gpio-interrupt</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-gpio-interrupt</uri>
    <description>This example demonstrates how to configure a GPIO to generate an interrupt in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 led switch</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>BLE Find Me</name>
    <id>mtb-example-psoc6-ble-findme</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-findme</uri>
    <description>This code example demonstrates the implementation of a simple BLE Immediate Alert Service (IAS)-based Find Me Profile (FMP) using PSoC 6 MCU with Bluetooth Low Energy (BLE) Connectivity.</description>
    <req_capabilities>psoc6 led switch ble</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>TCPWM Square Wave</name>
    <id>mtb-example-psoc6-tcpwm-square-wave</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-tcpwm-square-wave</uri>
    <description>This code example generates a square wave using the TCPWM resource configured as a PWM. An LED connected to the PWM output pin blinks at 2 Hz.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>RTC Basics</name>
    <id>mtb-example-psoc6-rtc-basics</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-rtc-basics</uri>
    <description>This example demonstrates the usage of the real-time clock (RTC) in PSoC 6 MCU.</description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Emulated EEPROM</name>
    <id>mtb-example-psoc6-emulated-eeprom</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-emulated-eeprom</uri>
    <description>This code example demonstrates emulation of EEPROM behavior in flash memory of PSoC 6 MCU using emeeprom middleware.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Fault Handling</name>
    <id>mtb-example-psoc6-fault-handling</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-fault-handling</uri>
    <description>This example demonstrates the fault handling functionality of PSoC 6 MCU using Peripheral Driver Library (PDL) System Library (SysLib) and ModusToolbox integrated development environment (IDE).</description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Cryptography AES Demonstration</name>
    <id>mtb-example-psoc6-crypto-aes</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-crypto-aes</uri>
    <description>This code example encrypts and decrypts user input data using the AES algorithm using a 128-bit key. The encrypted and decrypted data are displayed on a UART terminal emulator.</description>
    <req_capabilities>psoc6 std_crypto</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Cryptography TRNG Demonstration</name>
    <id>mtb-example-psoc6-crypto-trng</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-crypto-trng</uri>
    <description>This code example demonstrates generating a One-Time Password (OTP) using the True Random Number generation feature of PSoC 6 MCU cryptography block.</description>
    <req_capabilities>psoc6 std_crypto</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Ramping LED using Smart IO</name>
    <id>mtb-example-psoc6-smartio-ramping-led</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-smartio-ramping-led</uri>
    <description>This example uses a PWM resource and Smart I/O in PSoC 6 MCU to implement a ramping LED, where an LED gradually cycles through increasing and decreasing brightness levels. There is no CPU usage except for the initialization of PWM and Smart I/O.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>SCB I2C Master</name>
    <id>mtb-example-psoc6-i2c-master</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-i2c-master</uri>
    <description>This example demonstrates the use of PSoC 6 MCU Serial Communication Block (SCB) resource in I2C Master mode.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Cryptography SHA Demonstration</name>
    <id>mtb-example-psoc6-crypto-sha</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-crypto-sha</uri>
    <description>This code example shows how to generate a 32-byte hash value or message digest for an arbitrary user input message with the SHA2 algorithm using the Cryptographic hardware block in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 std_crypto</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>QSPI Flash Read Write</name>
    <id>mtb-example-psoc6-qspi-readwrite</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-qspi-readwrite</uri>
    <description>This example demonstrates interfacing with an external NOR flash memory in Quad-SPI mode using the Serial Memory Interface (SMIF) block in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 led qspi</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CapSense Buttons and Slider FreeRTOS</name>
    <id>mtb-example-psoc6-capsense-buttons-slider-freertos</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-capsense-buttons-slider-freertos</uri>
    <description>This code example features a 5-segment CapSense slider and two CapSense buttons. Button 0 turns the LED on, Button 1 turns the LED off and the slider controls the brightness of the LED. The code example also demonstrates interfacing with Tuner GUI using I2C interface.</description>
    <req_capabilities>psoc6 led capsense_button capsense_linear_slider</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Watchdog Timer</name>
    <id>mtb-example-psoc6-wdt</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-wdt</uri>
    <description>This example demonstrates the Watchdog Timer (WDT) in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Multi-Counter Watchdog Timer</name>
    <id>mtb-example-psoc6-mcwdt</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-mcwdt</uri>
    <description>This example explains how to setup a 32-bit free-running counter using two 16-bit counters of Multi-Counter Watchdog Timer (MCWDT) in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>SCB UART Transmit and Receive</name>
    <id>mtb-example-psoc6-uart-transmit-receive</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-uart-transmit-receive</uri>
    <description>This example demonstrates the UART transmit and receive operation in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>SCB UART Transmit and Receive using DMA</name>
    <id>mtb-example-psoc6-uart-transmit-receive-dma</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-uart-transmit-receive-dma</uri>
    <description>This example demonstrates the UART transmit and receive operation using DMA in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>SCB I2C Slave Using Callbacks</name>
    <id>mtb-example-psoc6-i2c-slave-callback</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-i2c-slave-callback</uri>
    <description>This example demonstrates the operation of the PSoC 6 MCU Serial Communication Block (SCB) in I2C Slave mode using callbacks.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>SCB I2C Master EzI2C Slave</name>
    <id>mtb-example-psoc6-i2c-master-ezi2c-slave</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-i2c-master-ezi2c-slave</uri>
    <description>This example demonstrates the use of PSoC 6 MCU Serial Communication Block (SCB) resource in I2C Master mode with EzI2C slave.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>SCB SPI Master</name>
    <id>mtb-example-psoc6-spi-master</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-spi-master</uri>
    <description>This example demonstrates the use of PSoC 6 MCU Serial Communication Block (SCB) resource in SPI Master mode.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>SCB SPI Master DMA</name>
    <id>mtb-example-psoc6-spi-master-dma</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-spi-master-dma</uri>
    <description>This example demonstrates the use of PSoC 6 MCU Serial Communication Block (SCB) resource in SPI Master mode using DMA.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Switching Power Modes</name>
    <id>mtb-example-psoc6-switching-power-modes</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-switching-power-modes</uri>
    <description>This example demonstrates how to transition PSoC 6 MCU to the following power modes - Low Power Active, Low Power Sleep, Ultra Low Power Active, Ultra Low Power Sleep, and Deep Sleep.</description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>emWin E-Ink FreeRTOS</name>
    <id>mtb-example-psoc6-emwin-eink</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-emwin-eink-freertos</uri>
    <description>This code example demonstrates displaying 2D graphics on an E-Ink display using EmWin graphics library.</description>
    <req_capabilities>psoc6 led arduino switch</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>emWin OLED FreeRTOS</name>
    <id>mtb-example-psoc6-emwin-oled</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-emwin-oled-freertos</uri>
    <description>This code example demonstrates displaying 2D graphics on an OLED display using EmWin graphics library.</description>
    <req_capabilities>psoc6 arduino switch</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
</apps>